#!/usr/bin/env python2
## -*- coding: utf-8 -*-
##
## Triton
##

import sys
import z3

def sx(bits, value):
    sign_bit = 1 << (bits - 1)
    return (value & (sign_bit - 1)) - (value & sign_bit)

ctx = z3.Context()
s   = z3.Solver()

SymVar_0 = z3.BitVec('SymVar_0', 64)

guard_853 = SymVar_0
guard_864 = guard_853 # MOV operation
guard_27641 = guard_864 # MOV operation
guard_30328 = guard_27641 # MOV operation
guard_30336 = guard_30328 # MOV operation
guard_30338 = (guard_30336 ^ 0x202EB6DC) # XOR operation
guard_30357 = guard_27641 # MOV operation
guard_30365 = (0x202EB6DC & guard_30357) # AND operation
guard_30372 = ((guard_30365 + guard_30365) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_30380 = ((guard_30372 + guard_30338) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_33310 = guard_30380 # MOV operation
guard_47270 = guard_864 # MOV operation
guard_48909 = guard_47270 # MOV operation
guard_48927 = (((0x0) << 64 | guard_48909) / (((((((((0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x7 & 0xFF))) & 0xFFFFFFFFFFFFFFFF # DIV operation
guard_63831 = guard_48927 # MOV operation
guard_76967 = guard_33310 # MOV operation
guard_91908 = guard_864 # MOV operation
guard_92559 = guard_91908 # MOV operation
guard_92561 = guard_92559 # MOV operation
guard_92563 = ~guard_92561 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_92575 = guard_76967 # MOV operation
guard_92577 = (guard_92563 | guard_92575) # OR operation
guard_92586 = guard_91908 # MOV operation
guard_92588 = ((guard_92586 + guard_92577) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_92596 = ((guard_92588 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_105558 = guard_63831 # MOV operation
guard_107412 = guard_105558 # MOV operation
guard_107428 = guard_107412 # MOV operation
guard_107432 = ((guard_107428 << (0xF & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
guard_107439 = guard_107432 # MOV operation
guard_124399 = guard_63831 # MOV operation
guard_125629 = guard_124399 # MOV operation
guard_125645 = guard_125629 # MOV operation
guard_125649 = (guard_125645 >> (0x31 & 0x3F)) # SHR operation
guard_125656 = guard_125649 # MOV operation
guard_126675 = guard_107439 # MOV operation
guard_126679 = guard_125656 # MOV operation
guard_126681 = ((0x0 + ((guard_126675 + ((guard_126679 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
guard_126693 = guard_107439 # MOV operation
guard_126697 = guard_125656 # MOV operation
guard_126699 = (guard_126697 & guard_126693) # AND operation
guard_126706 = ~guard_126699 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_126708 = ((guard_126706 + guard_126681) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_126716 = ((guard_126708 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_128579 = guard_92596 # MOV operation
guard_128585 = guard_126716 # MOV operation
guard_128587 = guard_128579 # MOV operation
guard_128589 = (guard_128587 ^ guard_128585) # XOR operation
guard_128608 = guard_92596 # MOV operation
guard_128614 = guard_126716 # MOV operation
guard_128616 = (guard_128614 & guard_128608) # AND operation
guard_128623 = ((guard_128616 + guard_128616) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_128631 = ((guard_128623 + guard_128589) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_142590 = guard_128631 # MOV operation
guard_170317 = guard_864 # MOV operation
guard_173004 = guard_170317 # MOV operation
guard_173012 = guard_173004 # MOV operation
guard_173014 = (guard_173012 ^ 0x1226A2A) # XOR operation
guard_173033 = guard_170317 # MOV operation
guard_173041 = (0x1226A2A & guard_173033) # AND operation
guard_173048 = ((guard_173041 + guard_173041) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_173056 = ((guard_173048 + guard_173014) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_175986 = guard_173056 # MOV operation
guard_191430 = guard_142590 # MOV operation
guard_203248 = guard_175986 # MOV operation
guard_203907 = guard_191430 # MOV operation
guard_203911 = guard_203248 # MOV operation
guard_203913 = (guard_203907 ^ guard_203911) # XOR operation
guard_203930 = guard_191430 # MOV operation
guard_203932 = guard_203930 # MOV operation
guard_203934 = ~guard_203932 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_203938 = guard_203248 # MOV operation
guard_203940 = (guard_203934 & guard_203938) # AND operation
guard_203957 = guard_191430 # MOV operation
guard_203959 = guard_203957 # MOV operation
guard_203961 = ~guard_203959 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_203965 = guard_203248 # MOV operation
guard_203967 = (guard_203965 & guard_203961) # AND operation
guard_203974 = ((guard_203967 + guard_203940) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_203982 = guard_203913 # MOV operation
guard_203984 = ((guard_203982 - guard_203974) & 0xFFFFFFFFFFFFFFFF) # SUB operation
guard_203992 = guard_203984 # MOV operation
guard_219631 = guard_63831 # MOV operation
guard_221286 = guard_219631 # MOV operation
guard_221292 = guard_221286 # MOV operation
guard_221296 = (guard_221292 >> (0x1 & 0x3F)) # SHR operation
guard_221303 = guard_221296 # MOV operation
guard_223695 = guard_221303 # MOV operation
guard_223697 = guard_223695 # MOV operation
guard_223699 = ~guard_223697 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_223707 = (guard_223699 | 0x7) # OR operation
guard_223726 = guard_221303 # MOV operation
guard_223728 = ((guard_223726 + guard_223707) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_223736 = ((guard_223728 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_225749 = guard_223736 # MOV operation
guard_225755 = ((0x0 + ((guard_225749 + ((0x1 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
guard_225767 = guard_223736 # MOV operation
guard_225773 = (0x1 & guard_225767) # AND operation
guard_225780 = ~guard_225773 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_225782 = ((guard_225780 + guard_225755) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_225790 = ((guard_225782 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
guard_240275 = guard_33310 # MOV operation
guard_241505 = guard_240275 # MOV operation
guard_241519 = guard_225790 # MOV operation
guard_241521 = guard_241505 # MOV operation
guard_241523 = (guard_241519 & 0xFFFFFFFF) # MOV operation
guard_241525 = (guard_241521 >> ((guard_241523 & 0xFF) & 0x3F)) # SHR operation
guard_241532 = guard_241525 # MOV operation
guard_242567 = guard_203992 # MOV operation
guard_242569 = guard_242567 # MOV operation
guard_242571 = ~guard_242569 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_242575 = guard_241532 # MOV operation
guard_242577 = guard_242571 # MOV operation
guard_242579 = (guard_242577 & guard_242575) # AND operation
guard_242596 = guard_203992 # MOV operation
guard_242598 = guard_242596 # MOV operation
guard_242600 = ~guard_242598 & 0xFFFFFFFFFFFFFFFF # NOT operation
guard_242604 = guard_241532 # MOV operation
guard_242606 = guard_242600 # MOV operation
guard_242608 = (guard_242606 | guard_242604) # OR operation
guard_242625 = guard_203992 # MOV operation
guard_242629 = guard_241532 # MOV operation
guard_242631 = guard_242625 # MOV operation
guard_242633 = ((guard_242631 - guard_242629) & 0xFFFFFFFFFFFFFFFF) # SUB operation
guard_242641 = guard_242633 # MOV operation
guard_242643 = (guard_242641 & guard_242608) # AND operation
guard_242650 = (guard_242643 | guard_242579) # OR operation
guard_242657 = (guard_242650 >> (0x3F & 0x3F)) # SHR operation
guard_244201 = (guard_242657 & 0xFFFFFFFF) # MOV operation
guard_244203 = ((guard_244201 & 0xFFFFFFFF) & (guard_244201 & 0xFFFFFFFF)) # TEST operation
guard_244208 = (0x1 if ((guard_244203 & 0xFFFFFFFF) == 0x0) else 0x0) # Zero flag

branch1_853 = SymVar_0
branch1_864 = branch1_853 # MOV operation
branch1_27641 = branch1_864 # MOV operation
branch1_30328 = branch1_27641 # MOV operation
branch1_30336 = branch1_30328 # MOV operation
branch1_30338 = (branch1_30336 ^ 0x202EB6DC) # XOR operation
branch1_30357 = branch1_27641 # MOV operation
branch1_30365 = (0x202EB6DC & branch1_30357) # AND operation
branch1_30372 = ((branch1_30365 + branch1_30365) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_30380 = ((branch1_30372 + branch1_30338) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_33310 = branch1_30380 # MOV operation
branch1_47270 = branch1_864 # MOV operation
branch1_48909 = branch1_47270 # MOV operation
branch1_48927 = (((0x0) << 64 | branch1_48909) / (((((((((0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x7 & 0xFF))) & 0xFFFFFFFFFFFFFFFF # DIV operation
branch1_63831 = branch1_48927 # MOV operation
branch1_76967 = branch1_33310 # MOV operation
branch1_91908 = branch1_864 # MOV operation
branch1_92559 = branch1_91908 # MOV operation
branch1_92561 = branch1_92559 # MOV operation
branch1_92563 = ~branch1_92561 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_92575 = branch1_76967 # MOV operation
branch1_92577 = (branch1_92563 | branch1_92575) # OR operation
branch1_92586 = branch1_91908 # MOV operation
branch1_92588 = ((branch1_92586 + branch1_92577) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_92596 = ((branch1_92588 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_105558 = branch1_63831 # MOV operation
branch1_107412 = branch1_105558 # MOV operation
branch1_107428 = branch1_107412 # MOV operation
branch1_107432 = ((branch1_107428 << (0xF & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch1_107439 = branch1_107432 # MOV operation
branch1_124399 = branch1_63831 # MOV operation
branch1_125629 = branch1_124399 # MOV operation
branch1_125645 = branch1_125629 # MOV operation
branch1_125649 = (branch1_125645 >> (0x31 & 0x3F)) # SHR operation
branch1_125656 = branch1_125649 # MOV operation
branch1_126675 = branch1_107439 # MOV operation
branch1_126679 = branch1_125656 # MOV operation
branch1_126681 = ((0x0 + ((branch1_126675 + ((branch1_126679 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch1_126693 = branch1_107439 # MOV operation
branch1_126697 = branch1_125656 # MOV operation
branch1_126699 = (branch1_126697 & branch1_126693) # AND operation
branch1_126706 = ~branch1_126699 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_126708 = ((branch1_126706 + branch1_126681) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_126716 = ((branch1_126708 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_128579 = branch1_92596 # MOV operation
branch1_128585 = branch1_126716 # MOV operation
branch1_128587 = branch1_128579 # MOV operation
branch1_128589 = (branch1_128587 ^ branch1_128585) # XOR operation
branch1_128608 = branch1_92596 # MOV operation
branch1_128614 = branch1_126716 # MOV operation
branch1_128616 = (branch1_128614 & branch1_128608) # AND operation
branch1_128623 = ((branch1_128616 + branch1_128616) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_128631 = ((branch1_128623 + branch1_128589) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_142590 = branch1_128631 # MOV operation
branch1_170317 = branch1_864 # MOV operation
branch1_173004 = branch1_170317 # MOV operation
branch1_173012 = branch1_173004 # MOV operation
branch1_173014 = (branch1_173012 ^ 0x1226A2A) # XOR operation
branch1_173033 = branch1_170317 # MOV operation
branch1_173041 = (0x1226A2A & branch1_173033) # AND operation
branch1_173048 = ((branch1_173041 + branch1_173041) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_173056 = ((branch1_173048 + branch1_173014) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_175986 = branch1_173056 # MOV operation
branch1_271262 = branch1_33310 # MOV operation
branch1_284232 = branch1_63831 # MOV operation
branch1_284891 = branch1_271262 # MOV operation
branch1_284895 = branch1_284232 # MOV operation
branch1_284897 = ((0x0 + ((branch1_284891 + ((branch1_284895 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch1_284909 = branch1_271262 # MOV operation
branch1_284913 = branch1_284232 # MOV operation
branch1_284915 = (branch1_284913 & branch1_284909) # AND operation
branch1_284922 = ~branch1_284915 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_284924 = ((branch1_284922 + branch1_284897) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_284932 = ((branch1_284924 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_301549 = branch1_142590 # MOV operation
branch1_317030 = branch1_175986 # MOV operation
branch1_318737 = branch1_301549 # MOV operation
branch1_318743 = branch1_317030 # MOV operation
branch1_318745 = branch1_318737 # MOV operation
branch1_318747 = (branch1_318745 ^ branch1_318743) # XOR operation
branch1_318766 = branch1_301549 # MOV operation
branch1_318772 = branch1_317030 # MOV operation
branch1_318774 = (branch1_318772 & branch1_318766) # AND operation
branch1_318781 = ((branch1_318774 + branch1_318774) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_318789 = ((branch1_318781 + branch1_318747) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_320385 = branch1_318789 # MOV operation
branch1_320401 = branch1_320385 # MOV operation
branch1_320405 = (branch1_320401 >> (0x1 & 0x3F)) # SHR operation
branch1_320412 = branch1_320405 # MOV operation
branch1_323006 = branch1_320412 # MOV operation
branch1_323008 = branch1_323006 # MOV operation
branch1_323010 = ~branch1_323008 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_323018 = (branch1_323010 | 0xF) # OR operation
branch1_323037 = branch1_320412 # MOV operation
branch1_323039 = ((branch1_323037 + branch1_323018) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_323047 = ((branch1_323039 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_325060 = branch1_323047 # MOV operation
branch1_325066 = ((0x0 + ((branch1_325060 + ((0x1 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch1_325078 = branch1_323047 # MOV operation
branch1_325084 = (0x1 & branch1_325078) # AND operation
branch1_325091 = ~branch1_325084 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_325093 = ((branch1_325091 + branch1_325066) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_325101 = ((branch1_325093 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_327489 = branch1_325101 # MOV operation
branch1_327491 = ~branch1_327489 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_327493 = ((branch1_327491 + 0x40) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_327501 = ((branch1_327493 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_328558 = branch1_284932 # MOV operation
branch1_328562 = branch1_327501 # MOV operation
branch1_328564 = branch1_328558 # MOV operation
branch1_328566 = (branch1_328562 & 0xFFFFFFFF) # MOV operation
branch1_328568 = (branch1_328564 >> ((branch1_328566 & 0xFF) & 0x3F)) # SHR operation
branch1_328575 = branch1_328568 # MOV operation
branch1_341703 = branch1_63831 # MOV operation
branch1_354673 = branch1_33310 # MOV operation
branch1_355324 = branch1_354673 # MOV operation
branch1_355336 = branch1_341703 # MOV operation
branch1_355338 = ~branch1_355336 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_355340 = (branch1_355338 & branch1_355324) # AND operation
branch1_355357 = branch1_341703 # MOV operation
branch1_355359 = ((branch1_355357 + branch1_355340) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_371984 = branch1_142590 # MOV operation
branch1_383802 = branch1_175986 # MOV operation
branch1_385509 = branch1_371984 # MOV operation
branch1_385515 = branch1_383802 # MOV operation
branch1_385517 = branch1_385509 # MOV operation
branch1_385519 = (branch1_385517 ^ branch1_385515) # XOR operation
branch1_385538 = branch1_371984 # MOV operation
branch1_385544 = branch1_383802 # MOV operation
branch1_385546 = (branch1_385544 & branch1_385538) # AND operation
branch1_385553 = ((branch1_385546 + branch1_385546) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_385561 = ((branch1_385553 + branch1_385519) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_387582 = branch1_385561 # MOV operation
branch1_387588 = branch1_387582 # MOV operation
branch1_387592 = (branch1_387588 >> (0x1 & 0x3F)) # SHR operation
branch1_387599 = branch1_387592 # MOV operation
branch1_389991 = branch1_387599 # MOV operation
branch1_389993 = branch1_389991 # MOV operation
branch1_389995 = ~branch1_389993 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_390003 = (branch1_389995 | 0xF) # OR operation
branch1_390022 = branch1_387599 # MOV operation
branch1_390024 = ((branch1_390022 + branch1_390003) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_390032 = ((branch1_390024 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_391057 = branch1_390032 # MOV operation
branch1_391073 = (0xFFFFFFFFFFFFFFFE & branch1_391057) # AND operation
branch1_391092 = ((0x1 + branch1_391073) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_392494 = branch1_355359 # MOV operation
branch1_392500 = branch1_391092 # MOV operation
branch1_392502 = branch1_392494 # MOV operation
branch1_392504 = (branch1_392500 & 0xFFFFFFFF) # MOV operation
branch1_392506 = ((branch1_392502 << ((branch1_392504 & 0xFF) & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch1_392513 = branch1_392506 # MOV operation
branch1_393532 = branch1_392513 # MOV operation
branch1_393544 = branch1_328575 # MOV operation
branch1_393546 = ~branch1_393544 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch1_393548 = (branch1_393546 & branch1_393532) # AND operation
branch1_393565 = branch1_328575 # MOV operation
branch1_393567 = ((branch1_393565 + branch1_393548) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch1_396295 = branch1_393567 # MOV operation
branch1_398408 = branch1_396295 # MOV operation
branch1_398410 = branch1_398408 # MOV operation

branch2_853 = SymVar_0
branch2_864 = branch2_853 # MOV operation
branch2_27641 = branch2_864 # MOV operation
branch2_30328 = branch2_27641 # MOV operation
branch2_30336 = branch2_30328 # MOV operation
branch2_30338 = (branch2_30336 ^ 0x202EB6DC) # XOR operation
branch2_30357 = branch2_27641 # MOV operation
branch2_30365 = (0x202EB6DC & branch2_30357) # AND operation
branch2_30372 = ((branch2_30365 + branch2_30365) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_30380 = ((branch2_30372 + branch2_30338) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_33310 = branch2_30380 # MOV operation
branch2_47270 = branch2_864 # MOV operation
branch2_48909 = branch2_47270 # MOV operation
branch2_48927 = (((0x0) << 64 | branch2_48909) / (((((((((0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x0 & 0xFF)) << 8 | (0x7 & 0xFF))) & 0xFFFFFFFFFFFFFFFF # DIV operation
branch2_63831 = branch2_48927 # MOV operation
branch2_76967 = branch2_33310 # MOV operation
branch2_91908 = branch2_864 # MOV operation
branch2_92559 = branch2_91908 # MOV operation
branch2_92561 = branch2_92559 # MOV operation
branch2_92563 = ~branch2_92561 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_92575 = branch2_76967 # MOV operation
branch2_92577 = (branch2_92563 | branch2_92575) # OR operation
branch2_92586 = branch2_91908 # MOV operation
branch2_92588 = ((branch2_92586 + branch2_92577) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_92596 = ((branch2_92588 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_105558 = branch2_63831 # MOV operation
branch2_107412 = branch2_105558 # MOV operation
branch2_107428 = branch2_107412 # MOV operation
branch2_107432 = ((branch2_107428 << (0xF & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch2_107439 = branch2_107432 # MOV operation
branch2_124399 = branch2_63831 # MOV operation
branch2_125629 = branch2_124399 # MOV operation
branch2_125645 = branch2_125629 # MOV operation
branch2_125649 = (branch2_125645 >> (0x31 & 0x3F)) # SHR operation
branch2_125656 = branch2_125649 # MOV operation
branch2_126675 = branch2_107439 # MOV operation
branch2_126679 = branch2_125656 # MOV operation
branch2_126681 = ((0x0 + ((branch2_126675 + ((branch2_126679 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch2_126693 = branch2_107439 # MOV operation
branch2_126697 = branch2_125656 # MOV operation
branch2_126699 = (branch2_126697 & branch2_126693) # AND operation
branch2_126706 = ~branch2_126699 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_126708 = ((branch2_126706 + branch2_126681) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_126716 = ((branch2_126708 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_128579 = branch2_92596 # MOV operation
branch2_128585 = branch2_126716 # MOV operation
branch2_128587 = branch2_128579 # MOV operation
branch2_128589 = (branch2_128587 ^ branch2_128585) # XOR operation
branch2_128608 = branch2_92596 # MOV operation
branch2_128614 = branch2_126716 # MOV operation
branch2_128616 = (branch2_128614 & branch2_128608) # AND operation
branch2_128623 = ((branch2_128616 + branch2_128616) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_128631 = ((branch2_128623 + branch2_128589) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_142590 = branch2_128631 # MOV operation
branch2_170317 = branch2_864 # MOV operation
branch2_173004 = branch2_170317 # MOV operation
branch2_173012 = branch2_173004 # MOV operation
branch2_173014 = (branch2_173012 ^ 0x1226A2A) # XOR operation
branch2_173033 = branch2_170317 # MOV operation
branch2_173041 = (0x1226A2A & branch2_173033) # AND operation
branch2_173048 = ((branch2_173041 + branch2_173041) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_173056 = ((branch2_173048 + branch2_173014) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_175986 = branch2_173056 # MOV operation
branch2_271689 = branch2_63831 # MOV operation
branch2_286018 = branch2_175986 # MOV operation
branch2_286669 = branch2_286018 # MOV operation
branch2_286681 = branch2_271689 # MOV operation
branch2_286683 = ~branch2_286681 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_286685 = (branch2_286683 & branch2_286669) # AND operation
branch2_286702 = branch2_271689 # MOV operation
branch2_286704 = ((branch2_286702 + branch2_286685) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_289102 = branch2_286704 # MOV operation
branch2_289104 = branch2_289102 # MOV operation
branch2_289106 = ~branch2_289104 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_289114 = (branch2_289106 | 0x1F) # OR operation
branch2_289133 = branch2_286704 # MOV operation
branch2_289135 = ((branch2_289133 + branch2_289114) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_289143 = ((branch2_289135 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_291735 = branch2_289143 # MOV operation
branch2_291743 = branch2_291735 # MOV operation
branch2_291747 = ((branch2_291743 << (0x4 & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch2_291754 = branch2_291747 # MOV operation
branch2_306451 = branch2_142590 # MOV operation
branch2_307102 = branch2_306451 # MOV operation
branch2_307114 = branch2_291754 # MOV operation
branch2_307116 = ~branch2_307114 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_307118 = (branch2_307116 & branch2_307102) # AND operation
branch2_307135 = branch2_291754 # MOV operation
branch2_307137 = ((branch2_307135 + branch2_307118) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_309865 = branch2_307137 # MOV operation
branch2_309867 = ((branch2_309865 >> 56) & 0xFF) # Byte reference - MOV operation
branch2_309868 = ((branch2_309865 >> 48) & 0xFF) # Byte reference - MOV operation
branch2_309869 = ((branch2_309865 >> 40) & 0xFF) # Byte reference - MOV operation
branch2_309870 = ((branch2_309865 >> 32) & 0xFF) # Byte reference - MOV operation
branch2_309871 = ((branch2_309865 >> 24) & 0xFF) # Byte reference - MOV operation
branch2_309872 = ((branch2_309865 >> 16) & 0xFF) # Byte reference - MOV operation
branch2_309873 = ((branch2_309865 >> 8) & 0xFF) # Byte reference - MOV operation
branch2_309874 = (branch2_309865 & 0xFF) # Byte reference - MOV operation
branch2_329244 = (((branch2_309869 & 0xFF)) << 8 | (branch2_309870 & 0xFF)) # MOVZX operation
branch2_333460 = (branch2_329244 & 0xFFFF) # MOVZX operation
branch2_352522 = (((branch2_309873 & 0xFF)) << 8 | (branch2_309874 & 0xFF)) # MOVZX operation
branch2_368910 = (branch2_352522 & 0xFFFF) # MOVZX operation
branch2_368912 = (((branch2_368910 & 0xFFFF) >> 8) & 0xFF) # Byte reference - MOV operation
branch2_368913 = ((branch2_368910 & 0xFFFF) & 0xFF) # Byte reference - MOV operation
branch2_394051 = (branch2_333460 & 0xFFFF) # MOVZX operation
branch2_396588 = (branch2_394051 & 0xFFFF) # MOVZX operation
branch2_396590 = (((branch2_396588 & 0xFFFF) >> 8) & 0xFF) # Byte reference - MOV operation
branch2_396591 = ((branch2_396588 & 0xFFFF) & 0xFF) # Byte reference - MOV operation
branch2_419605 = branch2_33310 # MOV operation
branch2_432575 = (((((((((branch2_309867 & 0xFF)) << 8 | (branch2_309868 & 0xFF)) << 8 | (branch2_368912 & 0xFF)) << 8 | (branch2_368913 & 0xFF)) << 8 | (branch2_309871 & 0xFF)) << 8 | (branch2_309872 & 0xFF)) << 8 | (branch2_396590 & 0xFF)) << 8 | (branch2_396591 & 0xFF)) # MOV operation
branch2_434809 = branch2_432575 # MOV operation
branch2_434811 = branch2_434809 # MOV operation
branch2_434813 = ~branch2_434811 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_434821 = (branch2_434813 | 0xF) # OR operation
branch2_434840 = branch2_432575 # MOV operation
branch2_434842 = ((branch2_434840 + branch2_434821) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_434850 = ((branch2_434842 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_437442 = branch2_434850 # MOV operation
branch2_437450 = branch2_437442 # MOV operation
branch2_437454 = ((branch2_437450 << (0x2 & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch2_437461 = branch2_437454 # MOV operation
branch2_438488 = branch2_419605 # MOV operation
branch2_438492 = branch2_437461 # MOV operation
branch2_438494 = ((0x0 + ((branch2_438488 + ((branch2_438492 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch2_438506 = branch2_419605 # MOV operation
branch2_438510 = branch2_437461 # MOV operation
branch2_438512 = (branch2_438510 & branch2_438506) # AND operation
branch2_438519 = ~branch2_438512 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_438521 = ((branch2_438519 + branch2_438494) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_438529 = ((branch2_438521 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_441249 = branch2_438529 # MOV operation
branch2_468965 = branch2_175986 # MOV operation
branch2_480783 = branch2_175986 # MOV operation
branch2_483017 = branch2_480783 # MOV operation
branch2_483019 = branch2_483017 # MOV operation
branch2_483021 = ~branch2_483019 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_483029 = (branch2_483021 | 0x1F) # OR operation
branch2_483048 = branch2_480783 # MOV operation
branch2_483050 = ((branch2_483048 + branch2_483029) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_483058 = ((branch2_483050 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_485650 = branch2_483058 # MOV operation
branch2_485658 = branch2_485650 # MOV operation
branch2_485662 = ((branch2_485658 << (0x3 & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch2_485669 = branch2_485662 # MOV operation
branch2_486696 = branch2_468965 # MOV operation
branch2_486700 = branch2_485669 # MOV operation
branch2_486702 = ((0x0 + ((branch2_486696 + ((branch2_486700 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch2_486714 = branch2_468965 # MOV operation
branch2_486718 = branch2_485669 # MOV operation
branch2_486720 = (branch2_486718 & branch2_486714) # AND operation
branch2_486727 = ~branch2_486720 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_486729 = ((branch2_486727 + branch2_486702) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_486737 = ((branch2_486729 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_489457 = branch2_486737 # MOV operation
branch2_515778 = branch2_441249 # MOV operation
branch2_528748 = branch2_63831 # MOV operation
branch2_529407 = branch2_515778 # MOV operation
branch2_529411 = branch2_528748 # MOV operation
branch2_529413 = ((0x0 + ((branch2_529407 + ((branch2_529411 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch2_529425 = branch2_515778 # MOV operation
branch2_529429 = branch2_528748 # MOV operation
branch2_529431 = (branch2_529429 & branch2_529425) # AND operation
branch2_529438 = ~branch2_529431 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_529440 = ((branch2_529438 + branch2_529413) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_529448 = ((branch2_529440 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_546065 = (((((((((branch2_309867 & 0xFF)) << 8 | (branch2_309868 & 0xFF)) << 8 | (branch2_368912 & 0xFF)) << 8 | (branch2_368913 & 0xFF)) << 8 | (branch2_309871 & 0xFF)) << 8 | (branch2_309872 & 0xFF)) << 8 | (branch2_396590 & 0xFF)) << 8 | (branch2_396591 & 0xFF)) # MOV operation
branch2_561546 = branch2_489457 # MOV operation
branch2_563253 = branch2_546065 # MOV operation
branch2_563259 = branch2_561546 # MOV operation
branch2_563261 = branch2_563253 # MOV operation
branch2_563263 = (branch2_563261 ^ branch2_563259) # XOR operation
branch2_563282 = branch2_546065 # MOV operation
branch2_563288 = branch2_561546 # MOV operation
branch2_563290 = (branch2_563288 & branch2_563282) # AND operation
branch2_563297 = ((branch2_563290 + branch2_563290) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_563305 = ((branch2_563297 + branch2_563263) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_564901 = branch2_563305 # MOV operation
branch2_564917 = branch2_564901 # MOV operation
branch2_564921 = (branch2_564917 >> (0x1 & 0x3F)) # SHR operation
branch2_564928 = branch2_564921 # MOV operation
branch2_567522 = branch2_564928 # MOV operation
branch2_567524 = branch2_567522 # MOV operation
branch2_567526 = ~branch2_567524 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_567534 = (branch2_567526 | 0xF) # OR operation
branch2_567553 = branch2_564928 # MOV operation
branch2_567555 = ((branch2_567553 + branch2_567534) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_567563 = ((branch2_567555 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_569576 = branch2_567563 # MOV operation
branch2_569582 = ((0x0 + ((branch2_569576 + ((0x1 * 0x1) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF)) & 0xFFFFFFFFFFFFFFFF) # LEA operation
branch2_569594 = branch2_567563 # MOV operation
branch2_569600 = (0x1 & branch2_569594) # AND operation
branch2_569607 = ~branch2_569600 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_569609 = ((branch2_569607 + branch2_569582) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_569617 = ((branch2_569609 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_572005 = branch2_569617 # MOV operation
branch2_572007 = ~branch2_572005 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_572009 = ((branch2_572007 + 0x40) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_572017 = ((branch2_572009 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_573074 = branch2_529448 # MOV operation
branch2_573078 = branch2_572017 # MOV operation
branch2_573080 = branch2_573074 # MOV operation
branch2_573082 = (branch2_573078 & 0xFFFFFFFF) # MOV operation
branch2_573084 = (branch2_573080 >> ((branch2_573082 & 0xFF) & 0x3F)) # SHR operation
branch2_573091 = branch2_573084 # MOV operation
branch2_586219 = branch2_63831 # MOV operation
branch2_599189 = branch2_441249 # MOV operation
branch2_599840 = branch2_599189 # MOV operation
branch2_599852 = branch2_586219 # MOV operation
branch2_599854 = ~branch2_599852 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_599856 = (branch2_599854 & branch2_599840) # AND operation
branch2_599873 = branch2_586219 # MOV operation
branch2_599875 = ((branch2_599873 + branch2_599856) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_616500 = (((((((((branch2_309867 & 0xFF)) << 8 | (branch2_309868 & 0xFF)) << 8 | (branch2_368912 & 0xFF)) << 8 | (branch2_368913 & 0xFF)) << 8 | (branch2_309871 & 0xFF)) << 8 | (branch2_309872 & 0xFF)) << 8 | (branch2_396590 & 0xFF)) << 8 | (branch2_396591 & 0xFF)) # MOV operation
branch2_628318 = branch2_489457 # MOV operation
branch2_630025 = branch2_616500 # MOV operation
branch2_630031 = branch2_628318 # MOV operation
branch2_630033 = branch2_630025 # MOV operation
branch2_630035 = (branch2_630033 ^ branch2_630031) # XOR operation
branch2_630054 = branch2_616500 # MOV operation
branch2_630060 = branch2_628318 # MOV operation
branch2_630062 = (branch2_630060 & branch2_630054) # AND operation
branch2_630069 = ((branch2_630062 + branch2_630062) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_630077 = ((branch2_630069 + branch2_630035) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_632098 = branch2_630077 # MOV operation
branch2_632104 = branch2_632098 # MOV operation
branch2_632108 = (branch2_632104 >> (0x1 & 0x3F)) # SHR operation
branch2_632115 = branch2_632108 # MOV operation
branch2_634507 = branch2_632115 # MOV operation
branch2_634509 = branch2_634507 # MOV operation
branch2_634511 = ~branch2_634509 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_634519 = (branch2_634511 | 0xF) # OR operation
branch2_634538 = branch2_632115 # MOV operation
branch2_634540 = ((branch2_634538 + branch2_634519) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_634548 = ((branch2_634540 + 0x1) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_635573 = branch2_634548 # MOV operation
branch2_635589 = (0xFFFFFFFFFFFFFFFE & branch2_635573) # AND operation
branch2_635608 = ((0x1 + branch2_635589) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_637010 = branch2_599875 # MOV operation
branch2_637016 = branch2_635608 # MOV operation
branch2_637018 = branch2_637010 # MOV operation
branch2_637020 = (branch2_637016 & 0xFFFFFFFF) # MOV operation
branch2_637022 = ((branch2_637018 << ((branch2_637020 & 0xFF) & 0x3F)) & 0xFFFFFFFFFFFFFFFF) # SHL operation
branch2_637029 = branch2_637022 # MOV operation
branch2_638048 = branch2_637029 # MOV operation
branch2_638060 = branch2_573091 # MOV operation
branch2_638062 = ~branch2_638060 & 0xFFFFFFFFFFFFFFFF # NOT operation
branch2_638064 = (branch2_638062 & branch2_638048) # AND operation
branch2_638081 = branch2_573091 # MOV operation
branch2_638083 = ((branch2_638081 + branch2_638064) & 0xFFFFFFFFFFFFFFFF) # ADD operation
branch2_640811 = branch2_638083 # MOV operation
branch2_642924 = branch2_640811 # MOV operation
branch2_642926 = branch2_642924 # MOV operation

s.add(z3.If((guard_244208 & 0x1) == 0x1, branch1_398410, branch2_642926) == int(sys.argv[1]))

collisions = 0
while s.check() == z3.sat and collisions < 10:
    print s.model()
    s.add(SymVar_0 != s.model()[SymVar_0])
    collisions += 1
