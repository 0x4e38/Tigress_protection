; ModuleID = 'llvm_expressions/./tigress-3-challenge-1.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: norecurse nounwind readnone
define i64 @__arybo(i64 %SymVar_0) #0 {
.3:
  %.8 = lshr i64 %SymVar_0, 49
  %.5 = shl i64 %SymVar_0, 15
  %.13 = or i64 %.5, %.8
  %.21 = or i64 %.13, 21199854960640
  %.22 = or i64 %.21, %SymVar_0
  %.41 = and i64 %.21, %SymVar_0
  %.42 = sub i64 %.22, %.41
  %.45 = lshr i64 %.42, 7
  %div = udiv i64 %SymVar_0, 7
  %sub = and i64 %div, 15
  %.109 = or i64 %sub, 1
  %0 = sub nsw i64 0, %.109
  %.249 = and i64 %0, 63
  %.250 = lshr i64 %.45, %.249
  %.362 = shl i64 %.45, %.109
  %.610 = xor i64 %.250, -1
  %.611 = and i64 %.362, %.610
  %.612 = add i64 %.611, %.250
  %div1 = udiv i64 %.21, 7
  %.660 = sub i64 %.612, %div1
  %.1318 = xor i64 %.612, -9223372036854775808
  %.1319 = and i64 %.660, %.1318
  %.3965 = icmp sgt i64 %.1319, -1
  br i1 %.3965, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3
  %.4031 = mul i64 %.45, %.45
  %.4040 = shl nuw nsw i64 %sub, 3
  %.4041 = or i64 %.8, 7
  %.4042 = xor i64 %.4041, 56
  %.4043 = add nuw nsw i64 %.8, 1
  %.4044 = add nuw nsw i64 %.4043, %.4042
  %.4050 = and i64 %.4044, 62
  %.4051 = or i64 %.4050, 1
  %.4052 = lshr i64 %SymVar_0, %.4051
  %.4055 = shl i64 %.4052, 7
  %.4058 = add i64 %.4040, %.21
  %.4061 = add i64 %.4058, %.4055
  %.4064 = add i64 %.4061, %.4031
  %.4067 = add i64 %.4064, %div
  %.4068 = xor i64 %.4064, -1
  %.4069 = and i64 %.4067, %.4068
  %.4071 = xor i64 %.4067, -1
  %.4072 = and i64 %.4064, %.4071
  %.4074 = mul i64 %.4069, %.4072
  %.4076 = and i64 %.4067, %.4064
  %.4078 = or i64 %.4067, %.4064
  %.4080 = mul i64 %.4076, %.4078
  %.4082 = add i64 %.4074, %.4080
  %.4083 = xor i64 %.4061, -1
  %.4084 = and i64 %.21, %.4083
  %.4085 = add i64 %.4084, %.4061
  %.4086 = and i64 %.4082, %.4085
  %.4087 = shl i64 %.4086, 1
  %.4088 = xor i64 %.4082, %.4085
  %.4089 = add i64 %.4087, %.4088
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3
  %.4151 = lshr i64 %div, 2
  %.4152 = or i64 %.4151, 15
  %.4153 = xor i64 %.4152, 48
  %.4154 = add nuw nsw i64 %.4151, 1
  %.4155 = add nuw nsw i64 %.4154, %.4153
  %.4155.not = and i64 %.4155, 62
  %.4160 = xor i64 %.4155.not, 63
  %.4166 = shl i64 %div, %.4160
  %.4238 = or i64 %.4155.not, 1
  %.4239 = lshr i64 %div, %.4238
  %.4240 = xor i64 %.4166, -1
  %.4241 = and i64 %.4239, %.4240
  %.4242 = add i64 %.4241, %.4166
  %.4339 = mul i64 %.45, %.45
  %.4360 = or i64 %.8, 7
  %.4361 = xor i64 %.4360, 56
  %.4362 = add nuw nsw i64 %.8, 1
  %.4363 = add nuw nsw i64 %.4362, %.4361
  %.4369 = and i64 %.4363, 62
  %.4370 = or i64 %.4369, 1
  %.4371 = lshr i64 %SymVar_0, %.4370
  %.4374 = shl i64 %.4371, 7
  %.4395 = add i64 %.4374, %.21
  %.4398 = add i64 %.4395, %.4339
  %.4401 = add i64 %.4242, %.4398
  %.4402 = xor i64 %.4398, -1
  %.4403 = and i64 %.4401, %.4402
  %.4405 = xor i64 %.4401, -1
  %.4406 = and i64 %.4398, %.4405
  %.4408 = mul i64 %.4403, %.4406
  %.4410 = and i64 %.4401, %.4398
  %.4412 = or i64 %.4401, %.4398
  %.4414 = mul i64 %.4410, %.4412
  %.4416 = add i64 %.4408, %.4414
  %.4435 = xor i64 %.4395, -1
  %.4436 = and i64 %.21, %.4435
  %.4437 = add i64 %.4436, %.4395
  %.4438 = and i64 %.4416, %.4437
  %.4439 = shl i64 %.4438, 1
  %.4440 = xor i64 %.4416, %.4437
  %.4441 = add i64 %.4439, %.4440
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.if
  %.4443 = phi i64 [ %.4089, %.3.endif.if ], [ %.4441, %.3.endif.else ]
  ret i64 %.4443
}

attributes #0 = { norecurse nounwind readnone }
